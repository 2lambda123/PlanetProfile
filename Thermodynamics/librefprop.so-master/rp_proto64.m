function [methodinfo,structs,enuminfo,ThunkLibName]=rp_proto64
%RP_PROTO64 Create structures to define interfaces found in 'header'.

%This function was generated by loadlibrary.m parser version  on Tue Jun 30 09:44:44 2015
%perl options:'header.i -outfile=rp_proto64.m -thunkfile=librefprop_thunk_maci64.c -header=header.h'
ival={cell(1,0)}; % change 0 to the actual number of functions to preallocate the data.
structs=[];enuminfo=[];fcnNum=1;
fcns=struct('name',ival,'calltype',ival,'LHS',ival,'RHS',ival,'alias',ival,'thunkname', ival);
MfilePath=fileparts(mfilename('fullpath'));
% ThunkLibName=fullfile(MfilePath,'librefprop_thunk_maci64');
ThunkLibName=fullfile(MfilePath,'librefprop');
% void setupdll_ ( long *, char [ 10000 ], char [ 255 ], char [ 3 ], long *, char [ 255 ], long , long , long , long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlonglonglonglongThunk';fcns.name{fcnNum}='setupdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr', 'int8Ptr', 'int8Ptr', 'int8Ptr', 'longPtr', 'int8Ptr', 'long', 'long', 'long', 'long'};fcnNum=fcnNum+1;
% void setrefdll_ ( char [ 3 ], long *, double *, double *, double *, double *, double *, long *, char [ 255 ], long , long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlonglongThunk';fcns.name{fcnNum}='setrefdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int8Ptr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long', 'long'};fcnNum=fcnNum+1;
% void setmixdll_ ( char [ 255 ], char [ 255 ], char [ 3 ], long *, char [ 10000 ], double *, long *, char [ 255 ], long , long , long , long , long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlonglonglonglonglongThunk';fcns.name{fcnNum}='setmixdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int8Ptr', 'int8Ptr', 'int8Ptr', 'longPtr', 'int8Ptr', 'doublePtr', 'longPtr', 'int8Ptr', 'long', 'long', 'long', 'long', 'long'};fcnNum=fcnNum+1;
% void setmoddll_ ( long *, char [ 3 ], char [ 3 ], char [ 60 ], long *, char [ 255 ], long , long , long , long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlonglonglonglongThunk';fcns.name{fcnNum}='setmoddll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr', 'int8Ptr', 'int8Ptr', 'int8Ptr', 'longPtr', 'int8Ptr', 'long', 'long', 'long', 'long'};fcnNum=fcnNum+1;
% void setpathdll_ ( char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrlongThunk';fcns.name{fcnNum}='setpathdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void gerg04dll_ ( long *, long *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='gerg04dll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr', 'longPtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void setktvdll_ ( long *, long *, char [ 3 ], double *, char [ 255 ], long *, char [ 255 ], long , long , long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlonglonglongThunk';fcns.name{fcnNum}='setktvdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr', 'longPtr', 'int8Ptr', 'doublePtr', 'int8Ptr', 'longPtr', 'int8Ptr', 'long', 'long', 'long'};fcnNum=fcnNum+1;
% void getktvdll_ ( long *, long *, char [ 3 ], double *, char [ 255 ], char [ 255 ], char [ 255 ], char [ 255 ], long , long , long , long , long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlonglonglonglonglongThunk';fcns.name{fcnNum}='getktvdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr', 'longPtr', 'int8Ptr', 'doublePtr', 'int8Ptr', 'int8Ptr', 'int8Ptr', 'int8Ptr', 'long', 'long', 'long', 'long', 'long'};fcnNum=fcnNum+1;
% void getfijdll_ ( char [ 3 ], double *, char [ 255 ], char [ 255 ], long , long , long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrlonglonglongThunk';fcns.name{fcnNum}='getfijdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int8Ptr', 'doublePtr', 'int8Ptr', 'int8Ptr', 'long', 'long', 'long'};fcnNum=fcnNum+1;
% void preosdll_ ( long *); 
fcns.thunkname{fcnNum}='voidvoidPtrThunk';fcns.name{fcnNum}='preosdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr'};fcnNum=fcnNum+1;
% void setagadll_ ( long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='setagadll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void unsetagadll_ (); 
fcns.thunkname{fcnNum}='voidThunk';fcns.name{fcnNum}='unsetagadll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% void namedll_ ( long *, char [ 12 ], char [ 80 ], char [ 12 ], long , long , long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrlonglonglongThunk';fcns.name{fcnNum}='namedll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr', 'int8Ptr', 'int8Ptr', 'int8Ptr', 'long', 'long', 'long'};fcnNum=fcnNum+1;
% void pureflddll_ ( long *); 
fcns.thunkname{fcnNum}='voidvoidPtrThunk';fcns.name{fcnNum}='pureflddll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr'};fcnNum=fcnNum+1;
% void setncdll_ ( long *); 
fcns.thunkname{fcnNum}='voidvoidPtrThunk';fcns.name{fcnNum}='setncdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr'};fcnNum=fcnNum+1;
% void rpversion_ ( char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrlongThunk';fcns.name{fcnNum}='rpversion_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void critpdll_ ( double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='critpdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void thermdll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='thermdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void therm2dll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='therm2dll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void therm3dll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='therm3dll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void therm0dll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='therm0dll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void pressdll_ ( double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='pressdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void enthaldll_ ( double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='enthaldll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void entrodll_ ( double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='entrodll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void cvcpdll_ ( double *, double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='cvcpdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void gibbsdll_ ( double *, double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='gibbsdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void agdll_ ( double *, double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='agdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void residualdll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='residualdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void cp0dll_ ( double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='cp0dll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void dpdddll_ ( double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='dpdddll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void dpdd2dll_ ( double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='dpdd2dll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void dpdtdll_ ( double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='dpdtdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void dddpdll_ ( double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='dddpdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void dddtdll_ ( double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='dddtdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void dhd1dll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='dhd1dll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void virbdll_ ( double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='virbdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void vircdll_ ( double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='vircdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void virbadll_ ( double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='virbadll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void vircadll_ ( double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='vircadll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void dbdtdll_ ( double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='dbdtdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void b12dll_ ( double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='b12dll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void fgctydll_ ( double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='fgctydll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void fgcty2dll_ ( double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='fgcty2dll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void fugcofdll_ ( double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='fugcofdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void chempotdll_ ( double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='chempotdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void actvydll_ ( double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='actvydll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void excessdll_ ( double *, double *, double *, long *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='excessdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void satsplndll_ ( double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='satsplndll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void sattpdll_ ( double *, double *, double *, long *, long *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='sattpdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void sattdll_ ( double *, double *, long *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='sattdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void satpdll_ ( double *, double *, long *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='satpdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void satddll_ ( double *, double *, long *, long *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='satddll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'longPtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void sathdll_ ( double *, double *, long *, long *, long *, double *, double *, double *, long *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='sathdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'longPtr', 'longPtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void satedll_ ( double *, double *, long *, long *, long *, double *, double *, double *, long *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='satedll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'longPtr', 'longPtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void satsdll_ ( double *, double *, long *, long *, long *, double *, double *, double *, long *, double *, double *, double *, long *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='satsdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'longPtr', 'longPtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void cv2pkdll_ ( long *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='cv2pkdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void csatkdll_ ( long *, double *, long *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='csatkdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr', 'doublePtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void dptsatkdll_ ( long *, double *, long *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='dptsatkdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr', 'doublePtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void psatkdll_ ( long *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='psatkdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void dlsatkdll_ ( long *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='dlsatkdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void dvsatkdll_ ( long *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='dvsatkdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void melttdll_ ( double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='melttdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void mlth2odll_ ( double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='mlth2odll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void meltpdll_ ( double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='meltpdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void subltdll_ ( double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='subltdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void sublpdll_ ( double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='sublpdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void tprhodll_ ( double *, double *, double *, long *, long *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='tprhodll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'longPtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void tpflshdll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='tpflshdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void tdflshdll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='tdflshdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void pdflshdll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='pdflshdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void phflshdll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='phflshdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void psflshdll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='psflshdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void peflshdll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='peflshdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void thflshdll_ ( double *, double *, double *, long *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='thflshdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void tsflshdll_ ( double *, double *, double *, long *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='tsflshdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void teflshdll_ ( double *, double *, double *, long *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='teflshdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void dhflshdll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='dhflshdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void dsflshdll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='dsflshdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void deflshdll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='deflshdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void hsflshdll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='hsflshdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void esflshdll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='esflshdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void tqflshdll_ ( double *, double *, double *, long *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='tqflshdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void pqflshdll_ ( double *, double *, double *, long *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='pqflshdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void abfl1dll_ ( double *, double *, double *, long *, char [ 2 ], double *, double *, double *, double *, double *, long *, char [ 255 ], long , long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlonglongThunk';fcns.name{fcnNum}='abfl1dll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long', 'long'};fcnNum=fcnNum+1;
% void abfl2dll_ ( double *, double *, double *, long *, long *, char [ 2 ], double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long , long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlonglongThunk';fcns.name{fcnNum}='abfl2dll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'longPtr', 'int8Ptr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long', 'long'};fcnNum=fcnNum+1;
% void dbfl1dll_ ( double *, double *, double *, char [ 2 ], double *, double *, long *, char [ 255 ], long , long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlonglongThunk';fcns.name{fcnNum}='dbfl1dll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'int8Ptr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long', 'long'};fcnNum=fcnNum+1;
% void dbfl2dll_ ( double *, double *, double *, long *, char [ 2 ], double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long , long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlonglongThunk';fcns.name{fcnNum}='dbfl2dll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long', 'long'};fcnNum=fcnNum+1;
% void pdfl1dll_ ( double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='pdfl1dll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void phfl1dll_ ( double *, double *, double *, long *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='phfl1dll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void psfl1dll_ ( double *, double *, double *, long *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='psfl1dll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void trnprpdll_ ( double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='trnprpdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void dielecdll_ ( double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='dielecdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void surftdll_ ( double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='surftdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void surtendll_ ( double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='surtendll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void heatdll_ ( double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='heatdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void cstardll_ ( double *, double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='cstardll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void fpvdll_ ( double *, double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='fpvdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void wmoldll_ ( double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrThunk';fcns.name{fcnNum}='wmoldll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void xmassdll_ ( double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='xmassdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void xmoledll_ ( double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='xmoledll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void qmassdll_ ( double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='qmassdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void qmoledll_ ( double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='qmoledll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long'};fcnNum=fcnNum+1;
% void infodll_ ( long *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='infodll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
% void limitsdll_ ( char [ 3 ], double *, double *, double *, double *, double *, long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlongThunk';fcns.name{fcnNum}='limitsdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int8Ptr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'long'};fcnNum=fcnNum+1;
% void limitxdll_ ( char [ 3 ], double *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long , long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlonglongThunk';fcns.name{fcnNum}='limitxdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int8Ptr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long', 'long'};fcnNum=fcnNum+1;
% void limitkdll_ ( char [ 3 ], long *, double *, double *, double *, double *, double *, double *, double *, long *, char [ 255 ], long , long ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrlonglongThunk';fcns.name{fcnNum}='limitkdll_'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int8Ptr', 'longPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'longPtr', 'int8Ptr', 'long', 'long'};fcnNum=fcnNum+1;
methodinfo=fcns;